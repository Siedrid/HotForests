// calculate difference between Precipitation and Evapotranspiration monthly
// calculate trend thereof -> water deficit -> water stress

var hotforests = require('users/lobrecht940/HotForests:HotForests_functions');

Map.setCenter(11.2, 49.1, 7);

var countries = ee.FeatureCollection('FAO/GAUL/2015/level1');
var ERA5 = ee.ImageCollection('ECMWF/ERA5_LAND/DAILY_AGGR');

var bavaria = countries.filter('ADM1_NAME == "Bayern"');
var dataset = ee.Image('COPERNICUS/CORINE/V20/100m/2018');
var landCover = dataset.select("landcover");
var forestImage = landCover.updateMask(hotforests.forestMask);

// add year band to image collection with parameter year
var addYearMonthBand = function(image) {
  var index = ee.Number.parse(image.get('system:index'));

  return image.addBands(ee.Image.constant(index).rename('index').toFloat());
};

var start_date = ee.Date('1950-01-02');
var end_date = ee.Date('2024-05-17');

var evapo = ERA5.select("total_evaporation_sum");
var prec = ERA5.select("total_precipitation_sum");


var calculateMonthlyDifference = function(year, month) {
  var startDate = ee.Date.fromYMD(year, month, 1);
  var endDate = startDate.advance(1, 'month');

  var monthlyPrecip = prec.filterDate(startDate, endDate)
                                      .sum().clip(bavaria)
                                      .set('year', year)
                                      .set('month', month)
                                      .set('system:time_start', startDate);

  var monthlyEvap = evapo.filterDate(startDate, endDate)
                                  .sum().clip(bavaria)
                                  .set('year', year)
                                  .set('month', month)
                                  .set('system:time_start', startDate);

  var monthlyDifference = monthlyPrecip.add(monthlyEvap)
                                        .set('year', year)
                                        .set('month', month)
                                        .set('system:time_start', startDate)
                                        .rename('precip_minus_evap');

  return monthlyDifference;
};

// Generate a list of years and months
var years = ee.List.sequence(1950, 2023);
var months = ee.List.sequence(1, 12);

// Calculate the difference for each month
var monthlyDifferences = years.map(function(year) {
  year = ee.Number(year);
  return months.map(function(month) {
    month = ee.Number(month);
    return calculateMonthlyDifference(year, month);
  });
}).flatten();

// Convert the list to an ImageCollection
var monthlyDifferencesCollection = ee.ImageCollection.fromImages(monthlyDifferences);
print(monthlyDifferencesCollection, 'monthlyDiff');

var monthlyDiff = monthlyDifferencesCollection.map(addYearMonthBand);
print(monthlyDiff, 'with index');

var linearfit = monthlyDiff.select(['index', 'precip_minus_evap']).reduce(ee.Reducer.linearFit());

//Trends displayed in colour
var palettes = require('users/gena/packages:palettes');
var RdYlBu = palettes.colorbrewer.RdYlBu[11].reverse();
var trend_vis = {
  min: -150, max: 150,
  palette:RdYlBu
};

var slope = linearfit.select('scale').clip(bavaria).multiply(120000).multiply(100).toInt(); //export as scaled integer to save processing time
Map.addLayer(slope, trend_vis, ' Linear Fit Slope');

Export.image.toDrive({
  image: slope,
  description: 'ET-Prec_lineartrend_slope',
  folder: 'GEE_exports',
  scale: 10000, 
  crs: 'EPSG:4326',  
  fileFormat: 'GeoTIFF',
  maxPixels: 1e13
});